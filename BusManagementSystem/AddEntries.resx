<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAACAgAAABACAAqBAAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAASCwAAEgsAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgMDABMlJgAoRkgAN1pcAEBk
        ZgBCZmgAQGNlADlZWgAtSUoAGi8vAAMGBgAAAAAAAAAAAAAAAAAAAAAAJCpHABLFzwA0fqoATtbeAELs
        9gA+7/oAP/P+AED0/gBD9P4ARfT+AEj0/gBB6fMAG4uQABASEgAAAAAABAQEAJC4sADEy78A5t7GAJPJ
        wACoxLcAqdbPAHrSzACYzMIAYdTUAIDOygBs3toAv+fUAGLb2gARS1AAAAAAAAMDAwCSsK8AormuANnR
        vACArK4AmLi4AK/I2wBuwM0ArMjZAF/C0ACsydkAacrTAMXQ2gB+zdEAK3BxAAgNDgBRlp0AUfD6ACPx
        /AAR4OsAQKuwAFaJogBVgMAAM5unAEKUoQA4laEAQY2cADiYpgBJjJsAM56pABxkawBdYmAAamdlAGaI
        hwA55u8ARbLEABfW6ABVg6YAanTKACyapwAxh5MAMXqDADF7hQAtjJgAMnqEACS1xgAod4gAUmBhAE9O
        TgBhaWgAhtfXABSfuAAYlq0AC9TxAATX+AAF1PUABdLyAAXS8gAF0vIACsLfABmMnwAJz+8AHHmIAB0e
        HgBMYWUAYnx+AEtiZgBGR0gAUVFSABG83AAC1v4AAtb+AALW/gAC1v4AA9b+ACN1hgBcWloAMnSCAEVD
        QgAAAAAACQkKADMxMQAsKywAUlBQAFtYVwAPIygACy03AA00PwAMMjwAHjxGADRCSAA4OTsAXVpZABsb
        GwAEBAQAAAAAAAAAAAAAAAAAAwMDAB0dHQAVFRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAsMABQU
        FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDx8vP09fb3+Pn6+/z9/v/g4eLj5OXm5+jp6uvs7e7v0NHS09TV
        1tfY2drb3N3e38DBwsPExcbHyMnKy8zNzs+wsbKztLW2t7i5uru8vb6/oKGio6SlpqeoqaqrrK2ur5CR
        kpOUlZaXmJmam5ydnp+AgYKDhIWGh4iJiouMjY6PcHFyc3R1dnd4eXp7fH1+f2BhYmNkZWZnaGlqa2xt
        bm9QUVJTVFVWV1hZWltcXV5fQEFCQ0RFRkdISUpLTE1OTzAxMjM0NTY3ODk6Ozw9Pj8gISIjJCUmJygp
        KissLS4vEBESExQVFhcYGRobHB0eHwABAgMEBQYHCAkKCwwNDg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACAAAABAAAAAAQAgAAAA
        AAAAEAAAEgsAABILAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/w0NDv8sKyz/R0dI/0VD
        RP8RERH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/ERER/x4e
        Hv8zMjP/Hh4e/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/ERER/xkZGf8JCQn/JCMl/z8+
        P/9VU1L/VVNS/05MTP8FBQb/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/w0NDv8kIyX/OTg5/zMy
        M/8sKyz/Q0FC/05MTP9VU1L/Hh4e/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/yQjJf9FQ0T/XVpa/01K
        S/8zMjP/Pz4//3Vzcv91c3L/UE5O/x4/Rv8ZR1X/F1do/xVecv8aZ33/Gmd9/xpnff8VXnL/IGRz/yde
        bv85Ymz/Kz5J/yw0Of9FQ0T/cm5t/11aWv9DQUL/DQ0O/w0NDv8AAAD/AAAA/wkJCf8zMjP/XVpa/3Vz
        cv9lh4z/YmFf/05MTP85Nzn/dXNy/3l2df9NSkv/HJu0/wvL6/8D1f7/A9X+/wPV/v8D1f7/A9X+/wPV
        /v8D1f7/A9X+/wPV/v8F1f3/FZm0/0NBQv97fHr/Yl9e/z5GS/8zj6D/XVpa/ywrLP8VFBT/Vllb/099
        hP9PfYT/T32E/2V2df9DdoD/OWJs/yoxNv8/Pj//RUNE/zxFR/8NxOP/C8vr/wHZ/v8B2f7/Adn+/wHZ
        /v8B2f7/Adn+/wHZ/v8B2f7/Adn+/wHZ/v8Ly+v/KjE2/01KS/9DQUL/Kmd2/y2YqP9dWlr/LCss/zMy
        M/9ecXT/T1BR/0dHSP9DQUL/eJWU/73Nw/8o2uT/DbPT/yZMVv8mTFb/FZm0/wfU8/8Kz/D/Adn+/wHZ
        /v8B2f7/Adn+/wHZ/v8B2f7/Adn+/wHZ/v8B2f7/Adn+/wHZ/v8VmbT/Kz9G/yhVX/8NxOP/CNPy/xm4
        yP8eHh7/PkZL/3iVlP9QTk7/VVNS/1BOTv97fHr/0dbF/2Tm7P8E5P3/HJu0/xyVrv8D3/7/Dtbq/wra
        +P8H1PP/CNPy/wvL6/8Ly+v/Csrm/wrK5v8Kyub/Csrm/wrK5v8Kyub/Csrm/wrK5v8Ly+v/C8vr/wjT
        8v8H1PP/Cs/w/ys/Rv9VU1L/tK2i/1VTUv9iX17/VVNS/3eNjP8/0tf/nert/33v9/85h5P/KePx/xnC
        y/9AgIf/YGuS/1RXw/9dbJj/RYyU/0WMlP9FjJT/RY2W/0WNlv9FjJT/RYyU/0WNlv9FjZb/RY2W/0WM
        lP9IipL/SIqS/0ODi/8+jZf/LDQ5/wkJCf9Ye4L/eXZ1/3ZybP+Egnz/S8DE/wbu+/8G7vv/F9jn/z57
        mv8Zz+H/BOT9/zSbqv+AhNX/g4rs/3aB3/8E5P3/G2p8/xp6if8iiZj/HFFc/x56h/8banz/IGRz/wy2
        yf8gYGv/F2Fs/yBxff8E5P3/BOT9/wTk/f8wN1P/AAAA/x4uMv9rucz/fuLk/0bn7/8d8/7/Cu76/wbu
        +/8G7vv/CObx/xfY5/9FjZb/LZio/2Nruf9mb+v/aHnC/yyrt/84g4z/OIOM/zeSm/85h5P/OIOM/zx7
        g/8+jZf/Opij/0CAh/84g4z/PHuD/zOhrP8zoaz/LKu3/xgjJ/8AAAD/BQUG/xQdIP9Ilqb/c/T9/2b1
        /v9M9P7/LPP+/xTp9v8Zwsv/KLzC/4SJg/+EiYP/QY6m/0OJsP9Bjqb/Opij/zOktf9Qn67/Spuu/zSe
        sP82qLr/Spuu/0GOpv8zpLX/M6S1/12htP9Ilqb/M6S1/zeSm/8lqrX/ChcY/wAAAP8AAAD/AAAA/wUF
        Bv93jYz/jLm4/5Otov9/pqT/srCe/8a8p/9Pp6j/qauo/7i0rP9rucz/mbjh/3ui1v9UjLz/RsPZ/4qt
        2/+Ts9v/TpvF/0bD2f+ZuOH/eJ7S/0Kny/9Owtv/k7Pb/5Cv2P82tNH/ls7L/y/IzP8KFxj/AAAA/wAA
        AP8AAAD/BwcI/4iXlv+64eD/3NO//5m/sv/78t3/8ubL/1i2u/+pq6j/qauo/5TOxv+83+H/7efV/9HW
        xf9G2dv/ls7L//bw4P+94NL/KMnQ//r04f+j19H/o9fL/3rg2v/579T/+vTh/1vM0v/a49T/aNjb/wkJ
        Cf8AAAD/AAAA/wAAAP8JCQn/kqKb/5fU0f/l4NT/k62i//Lmy//78t3/c7m4/8DMvP+4tKz/lM7G/5fU
        0f/69OH/2+DK/z/S1/98xsj/+e/U/8Lk3P8wztL/ydnE/8Lk3P+i4db/dt7W//nv1P/579T/aNjb/8nZ
        xP8ms7n/AAAA/wAAAP8AAAD/AAAA/wkJCf+3xLX/XaSe/+3n1f+strL/59zE/8LDrv9Ytrv/yuHX/9LK
        tf99wbn/Rq+x/8rh1/+ozML/KMnQ/0+nqP+j18v/c9DN/xrI0/8ms7n/UMbM/1jX2P9G2dv/i93Q/3rg
        2v8o2uT/KNrk/x56h/8AAAD/AAAA/wAAAP8AAAD/AAAA/z5GS/8zP5n/GcLL/w7Q2/8fh7//LkuP/xfY
        5/9WmZ3/KNrk/xHv+v8U6fb/FOn2/xXy/v8S8v7/EvL+/xLy/v8V8v7/FfL+/xXy/v8V8v7/GvL+/xry
        /v8a8v7/HfP+/x3z/v8ZuMj/R0dI/wAAAP8AAAD/AAAA/wAAAP8AAAD/BwcI/xgcMf8Xq7L/Dtbq/zOk
        tf9ShJ//Y+32/2b1/v9m9f7/ZvX+/2n1/v9p9f7/afX+/271/v9u9f7/bvX+/3P0/f9z9P3/dvb//3b2
        //929v//ePb//3P0/f9bzNL/MXV4/wYKCv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8JCQn/GzM0/zJiY/9IgYT/Vpmd/2qus/9zubj/fMbI/4LKzv+EzND/gsrO/4DHy/98xsj/c7m4/3Cu
        sf9gm53/VIqM/0Jyc/8nSUr/ChcY/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>